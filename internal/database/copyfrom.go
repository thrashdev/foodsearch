// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: copyfrom.go

package database

import (
	"context"
)

// iteratorForBatchCreateGlovoDishes implements pgx.CopyFromSource.
type iteratorForBatchCreateGlovoDishes struct {
	rows                 []BatchCreateGlovoDishesParams
	skippedFirstNextCall bool
}

func (r *iteratorForBatchCreateGlovoDishes) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBatchCreateGlovoDishes) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ID,
		r.rows[0].Name,
		r.rows[0].Description,
		r.rows[0].Price,
		r.rows[0].Discount,
		r.rows[0].GlovoApiDishID,
		r.rows[0].GlovoRestaurantID,
		r.rows[0].CreatedAt,
		r.rows[0].UpdatedAt,
	}, nil
}

func (r iteratorForBatchCreateGlovoDishes) Err() error {
	return nil
}

func (q *Queries) BatchCreateGlovoDishes(ctx context.Context, arg []BatchCreateGlovoDishesParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"glovo_dish"}, []string{"id", "name", "description", "price", "discount", "glovo_api_dish_id", "glovo_restaurant_id", "created_at", "updated_at"}, &iteratorForBatchCreateGlovoDishes{rows: arg})
}

// iteratorForBatchCreateGlovoRestaurants implements pgx.CopyFromSource.
type iteratorForBatchCreateGlovoRestaurants struct {
	rows                 []BatchCreateGlovoRestaurantsParams
	skippedFirstNextCall bool
}

func (r *iteratorForBatchCreateGlovoRestaurants) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBatchCreateGlovoRestaurants) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ID,
		r.rows[0].Name,
		r.rows[0].Address,
		r.rows[0].DeliveryFee,
		r.rows[0].PhoneNumber,
		r.rows[0].GlovoApiStoreID,
		r.rows[0].GlovoApiAddressID,
		r.rows[0].GlovoApiSlug,
		r.rows[0].CreatedAt,
		r.rows[0].UpdatedAt,
	}, nil
}

func (r iteratorForBatchCreateGlovoRestaurants) Err() error {
	return nil
}

func (q *Queries) BatchCreateGlovoRestaurants(ctx context.Context, arg []BatchCreateGlovoRestaurantsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"glovo_restaurant"}, []string{"id", "name", "address", "delivery_fee", "phone_number", "glovo_api_store_id", "glovo_api_address_id", "glovo_api_slug", "created_at", "updated_at"}, &iteratorForBatchCreateGlovoRestaurants{rows: arg})
}

// iteratorForBatchCreateYandexRestaurants implements pgx.CopyFromSource.
type iteratorForBatchCreateYandexRestaurants struct {
	rows                 []BatchCreateYandexRestaurantsParams
	skippedFirstNextCall bool
}

func (r *iteratorForBatchCreateYandexRestaurants) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBatchCreateYandexRestaurants) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ID,
		r.rows[0].Name,
		r.rows[0].Address,
		r.rows[0].DeliveryFee,
		r.rows[0].PhoneNumber,
		r.rows[0].YandexApiSlug,
		r.rows[0].CreatedAt,
		r.rows[0].UpdatedAt,
	}, nil
}

func (r iteratorForBatchCreateYandexRestaurants) Err() error {
	return nil
}

func (q *Queries) BatchCreateYandexRestaurants(ctx context.Context, arg []BatchCreateYandexRestaurantsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"yandex_restaurant"}, []string{"id", "name", "address", "delivery_fee", "phone_number", "yandex_api_slug", "created_at", "updated_at"}, &iteratorForBatchCreateYandexRestaurants{rows: arg})
}
