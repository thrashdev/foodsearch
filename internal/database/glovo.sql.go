// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: glovo.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createGlovoDish = `-- name: CreateGlovoDish :one
INSERT INTO glovo_dish(name, description, price, discount, glovo_api_dish_id, glovo_restaurant_id, created_at, updated_at)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
	returning id, name, description, price, discount, glovo_api_dish_id, glovo_restaurant_id, created_at, updated_at
`

type CreateGlovoDishParams struct {
	Name              string
	Description       string
	Price             string
	Discount          string
	GlovoApiDishID    int32
	GlovoRestaurantID uuid.NullUUID
	CreatedAt         time.Time
	UpdatedAt         time.Time
}

func (q *Queries) CreateGlovoDish(ctx context.Context, arg CreateGlovoDishParams) (GlovoDish, error) {
	row := q.db.QueryRowContext(ctx, createGlovoDish,
		arg.Name,
		arg.Description,
		arg.Price,
		arg.Discount,
		arg.GlovoApiDishID,
		arg.GlovoRestaurantID,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i GlovoDish
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Description,
		&i.Price,
		&i.Discount,
		&i.GlovoApiDishID,
		&i.GlovoRestaurantID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const createGlovoRestaurant = `-- name: CreateGlovoRestaurant :one
INSERT INTO glovo_restaurant(name, address, delivery_fee, phone_number, glovo_api_store_id, glovo_api_address_id, created_at, updated_at)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
	returning id, name, address, delivery_fee, phone_number, glovo_api_store_id, glovo_api_address_id, created_at, updated_at
`

type CreateGlovoRestaurantParams struct {
	Name              string
	Address           string
	DeliveryFee       string
	PhoneNumber       sql.NullString
	GlovoApiStoreID   int32
	GlovoApiAddressID int32
	CreatedAt         time.Time
	UpdatedAt         time.Time
}

func (q *Queries) CreateGlovoRestaurant(ctx context.Context, arg CreateGlovoRestaurantParams) (GlovoRestaurant, error) {
	row := q.db.QueryRowContext(ctx, createGlovoRestaurant,
		arg.Name,
		arg.Address,
		arg.DeliveryFee,
		arg.PhoneNumber,
		arg.GlovoApiStoreID,
		arg.GlovoApiAddressID,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i GlovoRestaurant
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Address,
		&i.DeliveryFee,
		&i.PhoneNumber,
		&i.GlovoApiStoreID,
		&i.GlovoApiAddressID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
